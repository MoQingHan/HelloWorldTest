<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	  <!-- 
	   groupId: groupId:项目或者组织的唯一标志，并且配置时生成的路径也是由此生成，
     	  如com.mycompany.app生成的相对路径为：/com/mycompany/app 
     -->
	<groupId>test0806</groupId>
	 <!-- artifactId: 项目的通用名称 -->
	<artifactId>test0806</artifactId>
	<!-- packaging: 打包的机制，如pom, jar, maven-plugin, ejb, war, ear, rar, par   -->
	<packaging>war</packaging>
	<!-- version:项目的版本 -->
	<version>0.0.1-SNAPSHOT</version>
	 <!-- 项目的名称， Maven 产生的文档用 -->
	<name>test0806 Maven Webapp</name>
	<!-- 
	哪个网站可以找到这个项目,提示如果 Maven 资源列表没有，
	可以直接上该网站寻找, Maven 产生的文档用 
	-->
	<!-- <url>http://maven.apache.org</url>-->
	
	<!-- 项目的描述, Maven 产生的文档用 -->
   <!-- <description>A maven project to study maven.</description>-->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<servlet-api.version>3.1.0</servlet-api.version>
		<spring.version>4.3.6.RELEASE</spring.version>
		<mysql.version>5.1.40</mysql.version>
		<log4j.version>1.2.17</log4j.version>
		<mybatis.version>3.4.6</mybatis.version> 
		<mybatis-spring.version>1.3.2</mybatis-spring.version>
		<gson.version>2.8.5</gson.version>
		<commons-lang3.version>3.7</commons-lang3.version>
		<commons-io.version>2.6</commons-io.version>
		<commons-logging.version>1.2</commons-logging.version>
		<commons-fileupload.version>1.3.3</commons-fileupload.version>
		<aopalliance.version>1.0</aopalliance.version>
		<aspectjrt.version>1.5.3</aspectjrt.version>
		<aspectjweaver.version>1.5.3</aspectjweaver.version>
		<druid.version>1.1.9</druid.version>
		<slf4j-api.version>1.7.9</slf4j-api.version>
		<slf4j-log4j12.version>1.7.9</slf4j-log4j12.version>
	</properties>
	<!-- 依赖关系 -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<!-- scope 说明
               - compile ：默认范围，用于编译 
               - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath 
               - runtime: 在执行时，需要使用 
               - test:    用于test任务时使用 
               - system: 需要外在提供相应得元素。通过systemPath来取得 
               - systemPath: 仅用于范围为system。提供相应的路径 
               - optional:   标注可选，当项目自身也是依赖时。用于连续依赖时使用
           -->
			<scope>test</scope><!-- 这个属性值代表只在运行测试用例的时候才参与编译  -->
		</dependency>

		<!-- servlet的jar -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-api.version}</version>
			<scope>provided</scope><!--这个属性值代表只在调试时用，实际打包后不打，避免实际上线后和tomcat自带的jar冲突  -->
		</dependency>
		<!-- spring -->
		<!-- 基础包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring上下文支持 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring jdbc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring 整合其他框架的 orm映射 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- 统一事务 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--切面编程 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--expression表达式的支持 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- web支持-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- mvc框架-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中，比如Eclipse AJDT。外部依赖。 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<!-- log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>	
			<version>${slf4j-log4j12.version}</version>
		</dependency>
		<!-- mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>${mybatis.version}</version>
		</dependency>
		<!-- mybatis对spring框架的支持 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>${mybatis-spring.version}</version>
		</dependency>
		<!-- Google简单好用的json处理工具类 -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>${gson.version}</version>
		</dependency>
		<!-- 工具类 commons-lang3 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId> commons-lang3</artifactId>
		    <version>${commons-lang3.version}</version>
		</dependency>
		<!-- 工具类 commons-io -->
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>${commons-io.version}</version>
		</dependency>
		<!-- 日志通用处理 -->
		<dependency>
		    <groupId>commons-logging</groupId>
		    <artifactId>commons-logging</artifactId>
		    <version>${commons-logging.version}</version>
		</dependency>
		<!-- 文件上传 -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>${commons-fileupload.version}</version>
		</dependency>
		
		<!--aop支持  -->
		<dependency>
		    <groupId>aopalliance</groupId>
		    <artifactId>aopalliance</artifactId>
		    <version>${aopalliance.version}</version>
		</dependency>
		<dependency>
		    <groupId>aspectj</groupId>
		    <artifactId>aspectjrt</artifactId>
		    <version>${aspectjrt.version}</version>
		</dependency>
		<dependency>
		    <groupId>aspectj</groupId>
		    <artifactId>aspectjweaver</artifactId>
		    <version>${aspectjweaver.version}</version>
		</dependency>
		<!-- 数据库连接池 -->
		<dependency>
			    <groupId>com.alibaba</groupId>
			    <artifactId>druid</artifactId>
			    <version>${druid.version}</version>
		</dependency>
	</dependencies>
	<!-- 用于编译设置 -->
	<build>
		<finalName>test0806</finalName>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>${basedir}/src/main/resources/web-resources/</directory>
				<targetPath>${basedir}/src/main/webapp/WEB-INF/</targetPath>
			</resource>
			<resource>
				<directory>src/main/resources/</directory>
				<excludes>
					<exclude>**/web-resources/</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/test0806</path>
					<uriEncoding>UTF-8</uriEncoding>
					<port>8888</port>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	 <!-- 
       - maven proxy, 本地仓库，替代 maven.apache.org 网站 jar 列表，用户下载时，首先寻找该站点
       - 如资源找到，则下载。否则才去 jar 列表网站。对多人团队，可节省下载速度和个人存储空间。
   -->
   <!--  <repositories>
       <repository>
           <id>banseon-repository-proxy</id>
           <name>banseon-repository-proxy</name>
           <url>http://192.168.1.169:9999/repository/</url>
           <layout>default</layout>
       </repository>
   </repositories>
-->
	
</project>
