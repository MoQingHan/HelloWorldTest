<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<!-- 数据库数据源 配置 -->
	<!-- c3p0 -->
	<!--<bean id="DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/usemanage?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;autoReconnectForPools=true&amp;zeroDateTimeBehavior=convertToNull" />
		<property name="user" value="root" />
		<property name="password" value="admin" />

		<property name="initialPoolSize" value="2" />
		<property name="maxPoolSize" value="50" />
		<property name="minPoolSize" value="2" />
		<property name="maxIdleTime" value="3000" />
		<property name="autoCommitOnClose" value="true" />

		 掉线重连,保持活动连接 
		<property name="breakAfterAcquireFailure" value="false"></property>
		<property name="testConnectionOnCheckout" value="false"></property>
		<property name="testConnectionOnCheckin" value="false"></property>
		<property name="idleConnectionTestPeriod" value="60"></property>
		<property name="acquireRetryAttempts" value="10"></property>
		<property name="acquireRetryDelay" value="1000"></property>
	</bean>-->

	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
   	 	<property name="resultSetLogEnabled" value="false" />
	</bean>

	<bean id="DataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	   	 <!-- 基本属性 url、user、password -->
     <property name="url" value="jdbc:mysql://130.10.7.204:3306/jntsbt?useUnicode=true&amp;characterEncoding=UTF-8" />
     <property name="driverClassName" value="com.mysql.jdbc.Driver" />
     <property name="username" value="jntsbt" />
     <property name="password" value="jntsbt" />

     <!-- 配置监控统计拦截的filters -->
     <property name="filters" value="stat" />

     <!-- 配置初始化大小、最小、最大 -->
     <property name="maxActive" value="20" />
     <property name="initialSize" value="1" />
     <property name="minIdle" value="1" />

     <!-- 配置获取连接等待超时的时间 -->
     <property name="maxWait" value="60000" />     

     <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
     <property name="timeBetweenEvictionRunsMillis" value="60000" />

     <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
     <property name="minEvictableIdleTimeMillis" value="300000" />

     <property name="testWhileIdle" value="true" />
     <property name="testOnBorrow" value="false" />
     <property name="testOnReturn" value="false" />

     <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
     <property name="poolPreparedStatements" value="true" />
     
     <property name="maxOpenPreparedStatements" value="20" />
	 
      <property name="proxyFilters">
	        <list>
	            <ref bean="log-filter"/>
	        </list>
	    </property>
	</bean>

	<!-- 事务管理配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="DataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" timeout="-1"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT" timeout="-1"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="create*" propagation="REQUIRED" isolation="DEFAULT" timeout="-1"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" timeout="-1"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" timeout="-1"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="remove*" propagation="REQUIRED" isolation="DEFAULT" timeout="-1"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="txMethods" expression="execution(* com.sx.test.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txMethods" />
		<!-- 上面两行针对接口配置，可重复配置多个 -->
	</aop:config>

<!-- 启动加载 mybatis   -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="DataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:sqlMapper/*.xml" />
	</bean>
<!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="typeAliasesPackage" value="com.how2java.pojo" />
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:com/how2java/mapper/*.xml"/>
	</bean>
 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sx.test.dao"/>
	</bean>
</beans>