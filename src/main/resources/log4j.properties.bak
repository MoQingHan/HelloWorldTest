###Log4j建议只使用四个级别，优 先级从高到低分别是ERROR、WARN、INFO、DEBUG
###appender###
###org.apache.log4j.ConsoleAppender（控制台），  
###org.apache.log4j.FileAppender（文件），  
###org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），  
###org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），  
###org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
 
###layout###
###org.apache.log4j.HTMLLayout（以HTML表格形式布局），  
###org.apache.log4j.PatternLayout（可以灵活地指定布局模式），  
###org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），  
###org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）

### %m 日志信息
### %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL  
### %r 输出自应用启动到输出该log信息耗费的毫秒数  
### %c 输出所属的类目，通常就是所在类的全名  
### %t 输出产生该日志事件的线程名  
### %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”  
### %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  
### %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)

###log4j.logger.org.apache.ibatis.datasource.pooled  = DEBUG,stdout,D,E
##log4j.logger.com.alibaba=DEBUG,stdout,D,E
##log4j.rootLogger = DEBUG,stdout,D,E

 ### 设置###
log4j.rootLogger =INFO,DEBUG,CONSOLE,stdout
### 输出信息到控制抬 ###
log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Target = System.out
log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
##log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n
log4j.appender.CONSOLE.layout.ConversionPattern = [%p] %d{yyyy-MM-dd HH:mm:ss,SSS} %m%n

### 输出DEBUG 级别以上的日志到=E://logs/error.log ###
###log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
###log4j.appender.D.File = E://logs/log.log
###log4j.appender.D.Append = true
###log4j.appender.D.Threshold = WARN 
###log4j.appender.D.layout = org.apache.log4j.PatternLayout
###log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 输出ERROR 级别以上的日志到=E://logs/error.log ###
###log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
###log4j.appender.E.File =E://logs/error.log 
###log4j.appender.E.Append = true
###log4j.appender.E.Threshold = ERROR 
###log4j.appender.E.layout = org.apache.log4j.PatternLayout
###log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

###显示SQL语句部分
###log4j.logger.org.apache.ibatis=DEBUG
###log4j.logger.org.mybatis.spring=DEBUG
###log4j.logger.java.sql=DEBUG
###log4j.logger.org.springframework=DEBUG
###log4j.logger.Java.sql.Connection=DEBUG
###log4j.logger.java.sql.Statement=DEBUG
###log4j.logger.java.sql.PreparedStatement=DEBUG
###log4j.logger.org.apache.activemq=DEBUG

## log4j.logger.com.sx.test=DEBUG
## org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug
## com.alibaba.druid.filter.logging.Log4jFilter.statementLog



  
###显示SQL语句部分  
# MyBatis logging configuration...  
log4j.logger.com.sx.test.dao=TRACE  
# Console output...  
log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n  
### mybatis loggers ###  
log4j.logger.com.ibatis=DEBUG,stdout  
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG,stdout  
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG,stdout  
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG,stdout  
# sql loggers  
log4j.logger.java.sql.Connection=DEBUG,stdout  
log4j.logger.java.sql.Statement=DEBUG,stdout  
log4j.logger.java.sql.PreparedStatement=DEBUG,stdout  
log4j.logger.java.sql.ResultSet=DEBUG,stdout  
